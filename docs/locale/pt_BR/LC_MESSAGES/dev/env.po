# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011–2018 <a href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a> &amp; <a href="https://realpython.com">Real Python</a>. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Augusto Solfa <augustosolfa@gmail.com>, 2017
# Juan Funez <juan.funez@gmail.com>, 2017
# Renato Giovanini <renato.feis@gmail.com>, 2017
# paulo rafael migueis alem <biggahed@gmail.com>, 2017
# Edson Mendes De Oliveira Filho <filho30face@gmail.com>, 2017
# Humberto Rocha <humrochagf@gmail.com>, 2017
# Hugo Ribeiro <hugodea.ribeiro@gmail.com>, 2018
# Marcello Azambuja <azambuja@gmail.com>, 2018
# Jorge Ricardo Soares <jorgersoares@outlook.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-10 18:10+0100\n"
"PO-Revision-Date: 2017-03-18 10:44+0000\n"
"Last-Translator: Jorge Ricardo Soares <jorgersoares@outlook.com>, 2019\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/own-16/teams/72945/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../dev/env.rst:2
msgid "Your Development Environment"
msgstr "Seu ambiente de desenvolvimento "

#: ../../dev/env.rst:8
msgid "Text Editors"
msgstr "Editores de texto"

#: ../../dev/env.rst:10
msgid ""
"Just about anything that can edit plain text will work for writing Python "
"code; however, using a more powerful editor may make your life a bit easier."
msgstr ""

#: ../../dev/env.rst:15
msgid "Vim"
msgstr "Vim"

#: ../../dev/env.rst:17
msgid ""
"Vim is a text editor which uses keyboard shortcuts for editing instead of "
"menus or icons. There are a couple of plugins and settings for the Vim "
"editor to aid Python development. If you only develop in Python, a good "
"start is to set the default settings for indentation and line-wrapping to "
"values compliant with :pep:`8`. In your home directory, open a file called "
":file:`.vimrc` and add the following lines::"
msgstr ""
"O Vim é um editor de textos que utiliza atalhos do teclado para a edição, ao"
" invés de menus ou ícones. Existem alguns plugins e configurações para o Vim"
" que auxiliam o desenvolvimento em Python. Se você desenvolve apenas em "
"Python, um bom começo é definir as configurações padrão para indentação e "
"quebras de linha para valores compatíveis com a :pep:`8`. Em seu diretório "
"inicial, abra um arquivo chamado :file:`.vimrc` e adicione as seguintes "
"linhas::"

#: ../../dev/env.rst:32
msgid ""
"With these settings, newlines are inserted after 79 characters and "
"indentation is set to 4 spaces per tab. If you also use Vim for other "
"languages, there is a handy plugin called indent_, which handles indentation"
" settings for Python source files."
msgstr ""
"Com essas configurações, novas linhas são inseridas após 79 caracteres e a "
"indentação é programada para 4 espaços por pressionamento da tecla tab. Se "
"você também usa Vim para outra línguas, existe um ótimo plugin chamado "
"indent_, que cuida da configuração da indentação para arquivos de origem do "
"Python."

#: ../../dev/env.rst:37
msgid ""
"There is also a handy syntax plugin called syntax_ featuring some "
"improvements over the syntax file included in Vim 6.1."
msgstr ""
"Também há um plugin de sintaxe muito prático chamado syntax_, que apresenta "
"algumas evoluções quando comparado ao arquivo de sintaxe incluído no Vim "
"6.1."

#: ../../dev/env.rst:40
msgid ""
"These plugins supply you with a basic environment for developing in Python. "
"To get the most out of Vim, you should continually check your code for "
"syntax errors and PEP8 compliance. Luckily pycodestyle_ and Pyflakes_ will "
"do this for you. If your Vim is compiled with ``+python`` you can also "
"utilize some very handy plugins to do these checks from within the editor."
msgstr ""

#: ../../dev/env.rst:46
msgid ""
"For PEP8 checking and pyflakes, you can install vim-flake8_. Now you can map"
" the function ``Flake8`` to any hotkey or action you want in Vim. The plugin"
" will display errors at the bottom of the screen, and provide an easy way to"
" jump to the corresponding line. It's very handy to call this function "
"whenever you save a file. In order to do this, add the following line to "
"your :file:`.vimrc`::"
msgstr ""
"Para checagens de PEP8 e pyflakes, você pode instalar o vim-flake8_. Agora "
"você pode mapear a função ``Flake8`` para qualquer tecla de atalho ou ação "
"que desejar no Vim. O plugin vai mostrar os erros no lado inferior da tela, "
"e fornecer uma maneira simples de saltar para a linha correspondente. É "
"muito útil chamar essa função sempre que você salvar um arquivo. Para fazer "
"isso, adicione a seguinte linha ao seu :file:`.vimrc`::"

#: ../../dev/env.rst:55
msgid ""
"If you are already using syntastic_, you can set it to run Pyflakes on write"
" and show errors and warnings in the quickfix window. An example "
"configuration to do that which also shows status and warning messages in the"
" statusbar would be::"
msgstr ""
"Se você já utiliza syntasic_, você pode configurar ele para rodar Pyflakes "
"na escrita e mostrar erros e advertências na janela de consertos rápidos. Um"
" exemplo de configuração que faça isso e que também mostre o status e "
"mensagens de advertência na barra de status pode ser:"

#: ../../dev/env.rst:68
msgid "Python-mode"
msgstr "Python-mode"

#: ../../dev/env.rst:70
msgid ""
"Python-mode_ is a complex solution for working with Python code in Vim. It "
"has:"
msgstr ""
"Python-mode_ é uma solução complexa para trabalhar com código em Python no "
"Vim. Ele tem:"

#: ../../dev/env.rst:73
msgid ""
"Asynchronous Python code checking (``pylint``, ``pyflakes``, "
"``pycodestyle``, ``mccabe``) in any combination"
msgstr ""

#: ../../dev/env.rst:74
msgid "Code refactoring and autocompletion with Rope"
msgstr "Refatoração de código e auto-completar com Rope"

#: ../../dev/env.rst:75
msgid "Fast Python folding"
msgstr "Dobra rápida Python"

#: ../../dev/env.rst:76
msgid "Virtualenv support"
msgstr "Suporte virtualenv"

#: ../../dev/env.rst:77
msgid "Search through Python documentation and run Python code"
msgstr "Busca através da documentação Python e execução de código Python"

#: ../../dev/env.rst:78
msgid "Auto pycodestyle_ error fixes"
msgstr ""

#: ../../dev/env.rst:80
msgid "And more."
msgstr "E mais."

#: ../../dev/env.rst:83
msgid "SuperTab"
msgstr "SuperTab"

#: ../../dev/env.rst:85
msgid ""
"SuperTab_ is a small Vim plugin that makes code completion more convenient "
"by using ``<Tab>`` key or any other customized keys."
msgstr ""
"SuperTab_ é um pequeno plugin de Vim que faz a função de auto-completar mais"
" conveniente utilizando-se a tecla ``<Tab>`` ou qualquer outra tecla "
"customizada. "

#: ../../dev/env.rst:98
msgid "Emacs"
msgstr "Emacs"

#: ../../dev/env.rst:100
msgid ""
"Emacs is another powerful text editor. It is fully programmable (Lisp), but "
"it can be some work to wire up correctly. A good start if you're already an "
"Emacs user is `Python Programming in Emacs`_ at EmacsWiki."
msgstr ""

#: ../../dev/env.rst:104
msgid "Emacs itself comes with a Python mode."
msgstr "O próprio Emacs vem com o modo Python"

#: ../../dev/env.rst:109
msgid "TextMate"
msgstr "TextMate"

#: ../../dev/env.rst:111
msgid ""
"`TextMate <http://macromates.com/>`_ brings Apple's approach to operating "
"systems into the world of text editors. By bridging Unix underpinnings and "
"GUI, TextMate cherry-picks the best of both worlds to the benefit of expert "
"scripters and novice users alike."
msgstr ""

#: ../../dev/env.rst:117
msgid "Sublime Text"
msgstr "Sublime Text"

#: ../../dev/env.rst:119
msgid ""
"`Sublime Text <http://www.sublimetext.com/>`_ is a sophisticated text editor"
" for code, markup, and prose. You'll love the slick user interface, "
"extraordinary features, and amazing performance."
msgstr ""

#: ../../dev/env.rst:123
msgid ""
"Sublime Text has excellent support for editing Python code and uses Python "
"for its plugin API. It also has a diverse variety of plugins, `some of which"
" <https://github.com/SublimeLinter/SublimeLinter>`_ allow for in-editor PEP8"
" checking and code \"linting\"."
msgstr ""
"O Sublime Text possuí um suporte excelente para edição de código Python além"
" de usar Python em sua API de plugins. Ele também possuí uma grande "
"variedade de plugins, `dos quais "
"<https://github.com/SublimeLinter/SublimeLinter>`_ habilitam checagem de "
"PEP8 no editor e \"linting\" de código."

#: ../../dev/env.rst:129
msgid "Atom"
msgstr "Atom"

#: ../../dev/env.rst:131
msgid ""
"`Atom <https://atom.io/>`_ is a hackable text editor for the 21st century, "
"built on atom-shell, and based on everything we love about our favorite "
"editors."
msgstr ""
"`Atom <https://atom.io/>`_ é um editor de texto para o século XXI, altamente"
" extensível, construído sobre o atom-shell e baseado em tudo o que amamos "
"nos nossos editores favoritos."

#: ../../dev/env.rst:135
msgid ""
"Atom is web native (HTML, CSS, JS), focusing on modular design and easy "
"plugin development. It comes with native package control and a plethora of "
"packages. Recommended for Python development is `Linter "
"<https://github.com/AtomLinter/Linter>`_ combined with `linter-flake8 "
"<https://github.com/AtomLinter/linter-flake8>`_."
msgstr ""

#: ../../dev/env.rst:143
msgid "IDEs"
msgstr "IDEs"

#: ../../dev/env.rst:146
msgid "PyCharm / IntelliJ IDEA"
msgstr "PyCharm / IntelliJ IDEA"

#: ../../dev/env.rst:148
msgid ""
"`PyCharm <http://www.jetbrains.com/pycharm/>`_ is developed by JetBrains, "
"also known for IntelliJ IDEA. Both share the same code base and most of "
"PyCharm's features can be brought to IntelliJ with the free `Python Plug-In "
"<https://plugins.jetbrains.com/plugin/?idea&pluginId=631>`_.  There are two "
"versions of PyCharm: Professional Edition (Free 30-day trial) and Community "
"Edition (Apache 2.0 License) with fewer features."
msgstr ""

#: ../../dev/env.rst:156
msgid "Python (on Visual Studio Code)"
msgstr "Python (no Visual Studio Code)"

#: ../../dev/env.rst:158
msgid ""
"`Python for Visual Studio "
"<https://marketplace.visualstudio.com/items?itemName=ms-python.python>`_ is "
"an extension for the `Visual Studio Code IDE "
"<https://code.visualstudio.com>`_. This is a free, lightweight, open source "
"IDE, with support for Mac, Windows, and Linux. Built using open source "
"technologies such as Node.js and Python, with compelling features such as "
"Intellisense (autocompletion), local and remote debugging, linting, and the "
"like."
msgstr ""

#: ../../dev/env.rst:162
msgid "MIT licensed."
msgstr "licenciado MIT."

#: ../../dev/env.rst:165
msgid "Enthought Canopy"
msgstr ""

#: ../../dev/env.rst:166
msgid ""
"`Enthought Canopy <https://www.enthought.com/products/canopy/>`_ is a Python"
" IDE which is focused towards Scientists and Engineers as it provides pre "
"installed libraries for data analysis."
msgstr ""

#: ../../dev/env.rst:171
msgid "Eclipse"
msgstr "Eclipse"

#: ../../dev/env.rst:173
msgid ""
"The most popular Eclipse plugin for Python development is Aptana's `PyDev "
"<http://pydev.org>`_."
msgstr ""
"O plugin mais popular para desenvolvimento com Python é PyDev "
"<http://pydev.org>`_ da Aptana."

#: ../../dev/env.rst:178
msgid "Komodo IDE"
msgstr "IDE Komodo"

#: ../../dev/env.rst:180
msgid ""
"`Komodo IDE <http://www.activestate.com/komodo-ide>`_ is developed by "
"ActiveState and is a commercial IDE for Windows, Mac, and Linux. `KomodoEdit"
" <https://github.com/Komodo/KomodoEdit>`_ is the open source alternative."
msgstr ""
"`O IDE Komodo <http://www.activestate.com/komodo-ide>`_ é desenvolvido pela "
"ActiveState e é um Ambiente de desenvolvimento integrado para Windows, Mac e"
" Linux. `KomodoEdit <https://github.com/Komodo/KomodoEdit>`_ é a alternativa"
" de código aberto."

#: ../../dev/env.rst:187
msgid "Spyder"
msgstr "Spyder"

#: ../../dev/env.rst:189
msgid ""
"`Spyder <https://github.com/spyder-ide/spyder>`_ is an IDE specifically "
"geared toward working with scientific Python libraries (namely `SciPy "
"<http://www.scipy.org/>`_). It includes integration with pyflakes_, `pylint "
"<http://www.logilab.org/857>`_ and `rope <https://github.com/python-"
"rope/rope>`_."
msgstr ""

#: ../../dev/env.rst:195
msgid ""
"Spyder is open source (free), offers code completion, syntax highlighting, a"
" class and function browser, and object inspection."
msgstr ""

#: ../../dev/env.rst:200
msgid "WingIDE"
msgstr "WingIDE"

#: ../../dev/env.rst:202
msgid ""
"`WingIDE <http://wingware.com/>`_ is a Python specific IDE. It runs on "
"Linux, Windows, and Mac (as an X11 application, which frustrates some Mac "
"users)."
msgstr ""

#: ../../dev/env.rst:205
msgid ""
"WingIDE offers code completion, syntax highlighting, source browser, "
"graphical debugger and support for version control systems."
msgstr ""
"WingIDE oferece autocompletar, destacamento de sintaxe, browser nativo, "
"debugger gráfico e suporte para sistemas de controle de versão."

#: ../../dev/env.rst:210
msgid "NINJA-IDE"
msgstr "NINJA-IDE"

#: ../../dev/env.rst:212
msgid ""
"`NINJA-IDE <http://www.ninja-ide.org/>`_ (from the recursive acronym: "
"\"Ninja-IDE Is Not Just Another IDE\") is a cross-platform IDE, specially "
"designed to build Python applications, and runs on Linux/X11, Mac OS X, and "
"Windows desktop operating systems. Installers for these platforms can be "
"downloaded from the website."
msgstr ""

#: ../../dev/env.rst:218
msgid ""
"NINJA-IDE is open source software (GPLv3 licence) and is developed in Python"
" and Qt. The source files can be downloaded from `GitHub <https://github.com"
"/ninja-ide>`_."
msgstr ""

#: ../../dev/env.rst:224
msgid "Eric (The Eric Python IDE)"
msgstr "Eric (The Eric Python IDE)"

#: ../../dev/env.rst:226
msgid ""
"`Eric <http://eric-ide.python-projects.org/>`_ is a full featured Python IDE"
" offering source code autocompletion, syntax highlighting, support for "
"version control systems, Python 3 support, integrated web browser, python "
"shell, integrated debugger, and a flexible plug-in system. Written in "
"Python, it is based on the Qt GUI toolkit, integrating the Scintilla editor "
"control. Eric is an open source software project (GPLv3 licence) with more "
"than ten years of active development."
msgstr ""

#: ../../dev/env.rst:236
msgid "Interpreter Tools"
msgstr "Ferramentas do intérprete"

#: ../../dev/env.rst:240
msgid "Virtual Environments"
msgstr "Ambientes virtuais"

#: ../../dev/env.rst:242
msgid ""
"Virtual Environments provide a powerful way to isolate project package "
"dependencies. This means that you can use packages particular to a Python "
"project without installing them system wide and thus avoiding potential "
"version conflicts."
msgstr ""
"Ambientes virtuais fornecem um meio poderoso para isolar dependências de "
"pacotes do seu projeto. Isso significa que você pode usar pacotes "
"particulares para um projeto em Python sem instalar eles em todo o seu "
"sistema, evitando potenciais conflitos de versão."

#: ../../dev/env.rst:244
msgid ""
"To start using and see more information: `Virtual Environments "
"<http://github.com/kennethreitz/python-"
"guide/blob/master/docs/dev/virtualenvs.rst>`_ docs."
msgstr ""

#: ../../dev/env.rst:249
msgid "pyenv"
msgstr "pyenv"

#: ../../dev/env.rst:251
msgid ""
"`pyenv <https://github.com/yyuu/pyenv>`_ is a tool to allow multiple "
"versions of the Python interpreter to be installed at the same time.  This "
"solves the problem of having different projects requiring different versions"
" of Python. For example, it becomes very easy to install Python 2.7 for "
"compatibility in one project, while still using Python 3.4 as the default "
"interpreter. pyenv isn't just limited to the CPython versions – it will also"
" install PyPy, Anaconda, miniconda, stackless, Jython, and IronPython "
"interpreters."
msgstr ""

#: ../../dev/env.rst:259
msgid ""
"pyenv works by filling a ``shims`` directory with fake versions of the "
"Python interpreter (plus other tools like ``pip`` and ``2to3``).  When the "
"system looks for a program named ``python``, it looks inside the ``shims`` "
"directory first, and uses the fake version, which in turn passes the command"
" on to pyenv.  pyenv then works out which version of Python should be run "
"based on environment variables, ``.python-version`` files, and the global "
"default."
msgstr ""

#: ../../dev/env.rst:266
msgid ""
"pyenv isn't a tool for managing virtual environments, but there is the "
"plugin `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv>`_ which "
"automates the creation of different environments, and also makes it possible"
" to use the existing pyenv tools to switch to different environments based "
"on environment variables or ``.python-version`` files."
msgstr ""

#: ../../dev/env.rst:273
msgid "Other Tools"
msgstr "Outras ferramentas"

#: ../../dev/env.rst:276
msgid "IDLE"
msgstr "IDLE"

#: ../../dev/env.rst:278
msgid ""
":ref:`IDLE <python:idle>` is an integrated development environment that is "
"part of the Python standard distribution. It is completely written in Python"
" and uses the Tkinter GUI toolkit. Though IDLE is not suited for full-blown "
"development using Python, it is quite helpful to try out small Python "
"snippets and experiment with different features in Python."
msgstr ""

#: ../../dev/env.rst:284
msgid "It provides the following features:"
msgstr "Ele provê as seguintes funcionalidades:"

#: ../../dev/env.rst:286
msgid "Python Shell Window (interpreter)"
msgstr "Janela terminar do Python (intérprete)"

#: ../../dev/env.rst:287
msgid "Multi window text editor that colorizes Python code"
msgstr "Editor de texto com múltiplas janelas que coloriza código em Python"

#: ../../dev/env.rst:288
msgid "Minimal debugging facility"
msgstr "Instalação de depuração mínima"

#: ../../dev/env.rst:292
msgid "IPython"
msgstr "IPython"

#: ../../dev/env.rst:294
msgid ""
"`IPython <http://ipython.org/>`_ provides a rich toolkit to help you make "
"the most out of using Python interactively. Its main components are:"
msgstr ""
"`O IPython <http://ipython.org/>`_ oferece um kit de ferramentas para ajudar"
" a você usar o Python interativamente. Seus principais componentes são:"

#: ../../dev/env.rst:297
msgid "Powerful Python shells (terminal- and Qt-based)"
msgstr ""

#: ../../dev/env.rst:298
msgid ""
"A web-based notebook with the same core features but support for rich media,"
" text, code, mathematical expressions and inline plots"
msgstr ""

#: ../../dev/env.rst:300
msgid "Support for interactive data visualization and use of GUI toolkits"
msgstr ""

#: ../../dev/env.rst:301
msgid "Flexible, embeddable interpreters to load into your own projects"
msgstr ""

#: ../../dev/env.rst:302
msgid "Tools for high level and interactive parallel computing"
msgstr ""

#: ../../dev/env.rst:308
msgid ""
"To download and install IPython with all its optional dependencies for the "
"notebook, qtconsole, tests, and other functionalities:"
msgstr ""

#: ../../dev/env.rst:315
msgid "BPython"
msgstr "BPython"

#: ../../dev/env.rst:317
msgid ""
"`bpython <http://bpython-interpreter.org/>`_ is an alternative interface to "
"the Python interpreter for Unix-like operating systems. It has the following"
" features:"
msgstr ""
"`bpython <http://bpython-interpreter.org/>`_ é uma interface alternativa "
"para o interpretador Python para sistemas Unix-like. Que tem os seguintes "
"recursos: "

#: ../../dev/env.rst:321
msgid "In-line syntax highlighting"
msgstr ""

#: ../../dev/env.rst:322
msgid "Readline-like autocomplete with suggestions displayed as you type"
msgstr ""

#: ../../dev/env.rst:323
msgid "Expected parameter list for any Python function"
msgstr ""

#: ../../dev/env.rst:324
msgid ""
"\"Rewind\" function to pop the last line of code from memory and re-evaluate"
msgstr ""

#: ../../dev/env.rst:325
msgid "Send entered code off to a pastebin"
msgstr ""

#: ../../dev/env.rst:326
msgid "Save entered code to a file"
msgstr ""

#: ../../dev/env.rst:327
msgid "Auto-indentation"
msgstr ""

#: ../../dev/env.rst:328
msgid "Python 3 support"
msgstr ""

#: ../../dev/env.rst:335
msgid "ptpython"
msgstr "ptpython"

#: ../../dev/env.rst:337
msgid ""
"`ptpython <https://github.com/jonathanslenders/ptpython/>`_ is a REPL build "
"on top of the `prompt_toolkit <http://github.com/jonathanslenders/python-"
"prompt-toolkit>`_ library. It is considered to be an alternative to "
"BPython_. Features include:"
msgstr ""

#: ../../dev/env.rst:341
msgid "Syntax highlighting"
msgstr "Realce de sintaxe"

#: ../../dev/env.rst:342
msgid "Autocompletion"
msgstr "Autocompletado"

#: ../../dev/env.rst:343
msgid "Multiline editing"
msgstr "Edição multi linha"

#: ../../dev/env.rst:344
msgid "Emacs and Vim Modes"
msgstr ""

#: ../../dev/env.rst:345
msgid "Embedding REPL inside of your code"
msgstr ""

#: ../../dev/env.rst:346
msgid "Syntax validation"
msgstr ""

#: ../../dev/env.rst:347
msgid "Tab pages"
msgstr ""

#: ../../dev/env.rst:348
msgid ""
"Support for integrating with IPython_'s shell, by installing IPython (``pip "
"install ipython``) and running ``ptipython``."
msgstr ""
