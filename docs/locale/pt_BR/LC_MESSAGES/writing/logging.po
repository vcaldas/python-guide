# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011–2018 <a href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a> &amp; <a href="https://realpython.com">Real Python</a>. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-10 18:10+0100\n"
"PO-Revision-Date: 2017-03-18 10:45+0000\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/own-16/teams/72945/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../writing/logging.rst:5
msgid "Logging"
msgstr ""

#: ../../writing/logging.rst:9
msgid ""
"The :mod:`logging` module has been a part of Python's Standard Library since"
" version 2.3.  It is succinctly described in :pep:`282`.  The documentation "
"is notoriously hard to read, except for the `basic logging tutorial`_."
msgstr ""

#: ../../writing/logging.rst:13
msgid "Logging serves two purposes:"
msgstr ""

#: ../../writing/logging.rst:15
msgid ""
"**Diagnostic logging** records events related to the application's "
"operation. If a user calls in to report an error, for example, the logs can "
"be searched for context."
msgstr ""

#: ../../writing/logging.rst:18
msgid ""
"**Audit logging** records events for business analysis. A user's "
"transactions can be extracted and combined with other user details for "
"reports or to optimize a business goal."
msgstr ""

#: ../../writing/logging.rst:25
msgid "... or Print?"
msgstr ""

#: ../../writing/logging.rst:27
msgid ""
"The only time that ``print`` is a better option than logging is when the "
"goal is to display a help statement for a command line application. Other "
"reasons why logging is better than ``print``:"
msgstr ""

#: ../../writing/logging.rst:31
msgid ""
"The `log record`_, which is created with every logging event, contains "
"readily available diagnostic information such as the file name, full path, "
"function, and line number of the logging event."
msgstr ""

#: ../../writing/logging.rst:34
msgid ""
"Events logged in included modules are automatically accessible via the root "
"logger to your application's logging stream, unless you filter them out."
msgstr ""

#: ../../writing/logging.rst:36
msgid ""
"Logging can be selectively silenced by using the method "
":meth:`logging.Logger.setLevel` or disabled by setting the attribute "
":attr:`logging.Logger.disabled` to ``True``."
msgstr ""

#: ../../writing/logging.rst:43
msgid "Logging in a Library"
msgstr ""

#: ../../writing/logging.rst:45
msgid ""
"Notes for `configuring logging for a library`_ are in the `logging "
"tutorial`_.  Because the *user*, not the library, should dictate what "
"happens when a logging event occurs, one admonition bears repeating:"
msgstr ""

#: ../../writing/logging.rst:51
msgid ""
"It is strongly advised that you do not add any handlers other than "
"NullHandler to your library’s loggers."
msgstr ""

#: ../../writing/logging.rst:55
msgid ""
"Best practice when instantiating loggers in a library is to only create them"
" using the ``__name__`` global variable: the :mod:`logging` module creates a"
" hierarchy of loggers using dot notation, so using ``__name__`` ensures no "
"name collisions."
msgstr ""

#: ../../writing/logging.rst:60
msgid ""
"Here is an example of best practice from the `requests source`_ -- place "
"this in your ``__init__.py``:"
msgstr ""

#: ../../writing/logging.rst:71
msgid "Logging in an Application"
msgstr ""

#: ../../writing/logging.rst:73
msgid ""
"The `twelve factor app <http://12factor.net>`_, an authoritative reference "
"for good practice in application development, contains a section on `logging"
" best practice <http://12factor.net/logs>`_. It emphatically advocates for "
"treating log events as an event stream, and for sending that event stream to"
" standard output to be handled by the application environment."
msgstr ""

#: ../../writing/logging.rst:81
msgid "There are at least three ways to configure a logger:"
msgstr ""

#: ../../writing/logging.rst:86
msgid "Using an INI-formatted file:"
msgstr ""

#: ../../writing/logging.rst:84
msgid ""
"**Pro**: possible to update configuration while running using the function "
":func:`logging.config.listen` to listen on a socket."
msgstr ""

#: ../../writing/logging.rst:86
msgid ""
"**Con**: less control (e.g. custom subclassed filters or loggers) than "
"possible when configuring a logger in code."
msgstr ""

#: ../../writing/logging.rst:91
msgid "Using a dictionary or a JSON-formatted file:"
msgstr ""

#: ../../writing/logging.rst:89
msgid ""
"**Pro**: in addition to updating while running, it is possible to load from "
"a file using the :mod:`json` module, in the standard library since Python "
"2.6."
msgstr ""

#: ../../writing/logging.rst:92
msgid "**Con**: less control than when configuring a logger in code."
msgstr ""

#: ../../writing/logging.rst:96
msgid "Using code:"
msgstr ""

#: ../../writing/logging.rst:94
msgid "**Pro**: complete control over the configuration."
msgstr ""

#: ../../writing/logging.rst:95
msgid "**Con**: modifications require a change to source code."
msgstr ""

#: ../../writing/logging.rst:99
msgid "Example Configuration via an INI File"
msgstr ""

#: ../../writing/logging.rst:101
msgid ""
"Let us say the file is named ``logging_config.ini``. More details for the "
"file format are in the `logging configuration`_ section of the `logging "
"tutorial`_."
msgstr ""

#: ../../writing/logging.rst:130
msgid "Then use :meth:`logging.config.fileConfig` in the code:"
msgstr ""

#: ../../writing/logging.rst:143
msgid "Example Configuration via a Dictionary"
msgstr ""

#: ../../writing/logging.rst:145
msgid ""
"As of Python 2.7, you can use a dictionary with configuration details. "
":pep:`391` contains a list of the mandatory and optional elements in the "
"configuration dictionary."
msgstr ""

#: ../../writing/logging.rst:178
msgid "Example Configuration Directly in Code"
msgstr ""
