# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011–2018 <a href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a> &amp; <a href="https://realpython.com">Real Python</a>. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Edson Mendes De Oliveira Filho <filho30face@gmail.com>, 2017
# Claudio Rogerio, 2017
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-10 18:10+0100\n"
"PO-Revision-Date: 2017-03-18 10:45+0000\n"
"Last-Translator: Claudio Rogerio, 2017\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/own-16/teams/72945/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../shipping/freezing.rst:6
msgid "Freezing Your Code"
msgstr ""

#: ../../shipping/freezing.rst:10
msgid ""
"\"Freezing\" your code is creating a single-file executable file to "
"distribute to end-users, that contains all of your application code as well "
"as the Python interpreter."
msgstr ""

#: ../../shipping/freezing.rst:14
msgid ""
"Applications such as 'Dropbox', 'Eve Online',  'Civilization IV', and "
"BitTorrent clients do this."
msgstr ""

#: ../../shipping/freezing.rst:17
msgid ""
"The advantage of distributing this way is that your application will \"just "
"work\", even if the user doesn't already have the required version of Python"
" (or any) installed. On Windows, and even on many Linux distributions and OS"
" X, the right version of Python will not already be installed."
msgstr ""

#: ../../shipping/freezing.rst:22
msgid ""
"Besides, end-user software should always be in an executable format. Files "
"ending in ``.py`` are for software engineers and system administrators."
msgstr ""

#: ../../shipping/freezing.rst:25
msgid ""
"One disadvantage of freezing is that it will increase the size of your "
"distribution by about 2–12 MB. Also, you will be responsible for shipping "
"updated versions of your application when security vulnerabilities to Python"
" are patched."
msgstr ""

#: ../../shipping/freezing.rst:33
msgid "Alternatives to Freezing"
msgstr ""

#: ../../shipping/freezing.rst:35
msgid ""
":ref:`Packaging your code <packaging-your-code-ref>` is for distributing "
"libraries or tools to other developers."
msgstr ""

#: ../../shipping/freezing.rst:38
msgid ""
"On Linux, an alternative to freezing is to :ref:`create a Linux distro "
"package <packaging-for-linux-distributions-ref>` (e.g. .deb files for Debian"
" or Ubuntu, or .rpm files for Red Hat and SuSE.)"
msgstr ""

#: ../../shipping/freezing.rst:42
msgid "Todo"
msgstr "Todo"

#: ../../shipping/freezing.rst:42
msgid "Fill in \"Freezing Your Code\" stub"
msgstr ""

#: ../../shipping/freezing.rst:47
msgid "Comparison of Freezing Tools"
msgstr ""

#: ../../shipping/freezing.rst:49
msgid "Solutions and platforms/features supported:"
msgstr ""

#: ../../shipping/freezing.rst:52
msgid "Solution"
msgstr ""

#: ../../shipping/freezing.rst:52 ../../shipping/freezing.rst:74
msgid "Windows"
msgstr ""

#: ../../shipping/freezing.rst:52 ../../shipping/freezing.rst:219
msgid "Linux"
msgstr ""

#: ../../shipping/freezing.rst:52 ../../shipping/freezing.rst:163
msgid "OS X"
msgstr ""

#: ../../shipping/freezing.rst:52
msgid "Python 3"
msgstr ""

#: ../../shipping/freezing.rst:52
msgid "License"
msgstr "Licença"

#: ../../shipping/freezing.rst:52
msgid "One-file mode"
msgstr ""

#: ../../shipping/freezing.rst:52
msgid "Zipfile import"
msgstr ""

#: ../../shipping/freezing.rst:52
msgid "Eggs"
msgstr ""

#: ../../shipping/freezing.rst:52
msgid "pkg_resources support"
msgstr ""

#: ../../shipping/freezing.rst:54 ../../shipping/freezing.rst:77
#: ../../shipping/freezing.rst:223
msgid "bbFreeze"
msgstr ""

#: ../../shipping/freezing.rst:54 ../../shipping/freezing.rst:54
#: ../../shipping/freezing.rst:54 ../../shipping/freezing.rst:54
#: ../../shipping/freezing.rst:54 ../../shipping/freezing.rst:54
#: ../../shipping/freezing.rst:55 ../../shipping/freezing.rst:55
#: ../../shipping/freezing.rst:55 ../../shipping/freezing.rst:55
#: ../../shipping/freezing.rst:56 ../../shipping/freezing.rst:56
#: ../../shipping/freezing.rst:56 ../../shipping/freezing.rst:56
#: ../../shipping/freezing.rst:56 ../../shipping/freezing.rst:56
#: ../../shipping/freezing.rst:57 ../../shipping/freezing.rst:57
#: ../../shipping/freezing.rst:57 ../../shipping/freezing.rst:57
#: ../../shipping/freezing.rst:57 ../../shipping/freezing.rst:57
#: ../../shipping/freezing.rst:58 ../../shipping/freezing.rst:58
#: ../../shipping/freezing.rst:58 ../../shipping/freezing.rst:58
#: ../../shipping/freezing.rst:58
msgid "yes"
msgstr ""

#: ../../shipping/freezing.rst:54 ../../shipping/freezing.rst:54
#: ../../shipping/freezing.rst:55 ../../shipping/freezing.rst:55
#: ../../shipping/freezing.rst:55 ../../shipping/freezing.rst:55
#: ../../shipping/freezing.rst:56 ../../shipping/freezing.rst:56
#: ../../shipping/freezing.rst:57 ../../shipping/freezing.rst:57
#: ../../shipping/freezing.rst:58 ../../shipping/freezing.rst:58
#: ../../shipping/freezing.rst:58
msgid "no"
msgstr ""

#: ../../shipping/freezing.rst:54 ../../shipping/freezing.rst:55
#: ../../shipping/freezing.rst:58
msgid "MIT"
msgstr ""

#: ../../shipping/freezing.rst:55 ../../shipping/freezing.rst:123
msgid "py2exe"
msgstr ""

#: ../../shipping/freezing.rst:56
msgid "pyInstaller"
msgstr ""

#: ../../shipping/freezing.rst:56
msgid "GPL"
msgstr ""

#: ../../shipping/freezing.rst:57
msgid "cx_Freeze"
msgstr ""

#: ../../shipping/freezing.rst:57
msgid "PSF"
msgstr ""

#: ../../shipping/freezing.rst:58 ../../shipping/freezing.rst:167
msgid "py2app"
msgstr ""

#: ../../shipping/freezing.rst:62
msgid ""
"Freezing Python code on Linux into a Windows executable was only once "
"supported in PyInstaller `and later dropped "
"<http://stackoverflow.com/questions/2950971/cross-compiling-a-python-script-"
"on-linux-into-a-windows-executable#comment11890276_2951046>`_."
msgstr ""

#: ../../shipping/freezing.rst:67
msgid ""
"All solutions need a Microsoft Visual C++ to be installed on the target "
"machine, except py2app. Only PyInstaller makes a self-executable exe that "
"bundles the appropriate DLL when passing ``--onefile`` to "
":file:`Configure.py`."
msgstr ""

#: ../../shipping/freezing.rst:79
msgid ""
"Prerequisite is to install :ref:`Python, Setuptools and pywin32 dependency "
"on Windows <install-windows>`."
msgstr ""

#: ../../shipping/freezing.rst:81
msgid "Install :code:`bbfreeze`:"
msgstr ""

#: ../../shipping/freezing.rst:87
msgid "Write most basic :file:`bb_setup.py`"
msgstr ""

#: ../../shipping/freezing.rst:99
msgid ""
"This will work for the most basic one file scripts. For more advanced "
"freezing you will have to provide include and exclude paths like so:"
msgstr ""

#: ../../shipping/freezing.rst:106
msgid "(Optionally) include icon"
msgstr ""

#: ../../shipping/freezing.rst:112
msgid ""
"4. Provide the Microsoft Visual C++ runtime DLL for the freezer. It might be"
" possible to append your :code:`sys.path` with the Microsoft Visual Studio "
"path but I find it easier to drop :file:`msvcp90.dll` in the same folder "
"where your script resides."
msgstr ""

#: ../../shipping/freezing.rst:116
msgid "Freeze!"
msgstr ""

#: ../../shipping/freezing.rst:125
msgid ""
"Prerequisite is to install :ref:`Python on Windows <install-windows>`. The "
"last release of py2exe is from the year 2014. There is not active "
"development."
msgstr ""

#: ../../shipping/freezing.rst:127
msgid ""
"Download and install http://sourceforge.net/projects/py2exe/files/py2exe/"
msgstr ""

#: ../../shipping/freezing.rst:129
msgid ""
"Write :file:`setup.py` (`List of configuration options "
"<http://www.py2exe.org/index.cgi/ListOfOptions>`_):"
msgstr ""

#: ../../shipping/freezing.rst:140
msgid ""
"(Optionally) `include icon <http://www.py2exe.org/index.cgi/CustomIcons>`_"
msgstr ""

#: ../../shipping/freezing.rst:142
msgid ""
"(Optionally) `one-file mode <http://stackoverflow.com/questions/112698"
"/py2exe-generate-single-executable-file#113014>`_"
msgstr ""

#: ../../shipping/freezing.rst:144
msgid "Generate :file:`.exe` into :file:`dist` directory:"
msgstr ""

#: ../../shipping/freezing.rst:150
msgid ""
"Provide the Microsoft Visual C++ runtime DLL. Two options: `globally install"
" dll on target machine <https://www.microsoft.com/en-"
"us/download/details.aspx?id=29>`_ or `distribute dll alongside with .exe "
"<http://www.py2exe.org/index.cgi/Tutorial#Step52>`_."
msgstr ""

#: ../../shipping/freezing.rst:153 ../../shipping/freezing.rst:170
#: ../../shipping/freezing.rst:226
msgid "PyInstaller"
msgstr ""

#: ../../shipping/freezing.rst:155
msgid ""
"Prerequisite is to have installed :ref:`Python, Setuptools and pywin32 "
"dependency on Windows <install-windows>`."
msgstr ""

#: ../../shipping/freezing.rst:157
msgid ""
"`Most basic tutorial <http://bojan-komazec.blogspot.com/2011/08/how-to-"
"create-windows-executable-from.html>`_"
msgstr ""

#: ../../shipping/freezing.rst:158
msgid "`Manual <https://pyinstaller.readthedocs.io/en/stable/>`_"
msgstr ""

#: ../../shipping/freezing.rst:172
msgid ""
"PyInstaller can be used to build Unix executables and windowed apps on Mac "
"OS X 10.6 (Snow Leopard) or newer."
msgstr ""

#: ../../shipping/freezing.rst:174
msgid "To install PyInstaller, use pip:"
msgstr ""

#: ../../shipping/freezing.rst:180
msgid "To create a standard Unix executable, from say :code:`script.py`, use:"
msgstr ""

#: ../../shipping/freezing.rst:186
msgid "This creates:"
msgstr ""

#: ../../shipping/freezing.rst:188
msgid "a :code:`script.spec` file, analogous to a :code:`make` file"
msgstr ""

#: ../../shipping/freezing.rst:189
msgid "a :code:`build` folder, that holds some log files"
msgstr ""

#: ../../shipping/freezing.rst:190
msgid ""
"a :code:`dist` folder, that holds the main executable :code:`script`, and "
"some dependent Python libraries"
msgstr ""

#: ../../shipping/freezing.rst:192
msgid ""
"all in the same folder as :code:`script.py`. PyInstaller puts all the Python"
" libraries used in :code:`script.py` into the :code:`dist` folder, so when "
"distributing the executable, distribute the whole :code:`dist` folder."
msgstr ""

#: ../../shipping/freezing.rst:194
msgid ""
"The :code:`script.spec` file can be edited to `customise the build "
"<http://pythonhosted.org/PyInstaller/#spec-file-operation>`_, with options "
"such as:"
msgstr ""

#: ../../shipping/freezing.rst:196
msgid "bundling data files with the executable"
msgstr ""

#: ../../shipping/freezing.rst:197
msgid ""
"including run-time libraries (:code:`.dll` or :code:`.so` files) that "
"PyInstaller can't infer automatically"
msgstr ""

#: ../../shipping/freezing.rst:198
msgid "adding Python run-time options to the executable"
msgstr ""

#: ../../shipping/freezing.rst:200
msgid ""
"Now :code:`script.spec` can be run with :code:`pyinstaller` (instead of "
"using :code:`script.py` again):"
msgstr ""

#: ../../shipping/freezing.rst:206
msgid ""
"To create a standalone windowed OS X application, use the :code:`--windowed`"
" option:"
msgstr ""

#: ../../shipping/freezing.rst:212
msgid ""
"This creates a :code:`script.app` in the :code:`dist` folder. Make sure to "
"use GUI packages in your Python code, like `PyQt "
"<https://riverbankcomputing.com/software/pyqt/intro>`_ or `PySide "
"<http://wiki.qt.io/About-PySide>`_, to control the graphical parts of the "
"app."
msgstr ""

#: ../../shipping/freezing.rst:214
msgid ""
"There are several options in :code:`script.spec` related to Mac OS X app "
"bundles `here <http://pythonhosted.org/PyInstaller/spec-files.html#spec-"
"file-options-for-a-mac-os-x-bundle>`_. For example, to specify an icon for "
"the app, use the :code:`icon=\\path\\to\\icon.icns` option."
msgstr ""
